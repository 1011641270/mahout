<?xml version="1.0" encoding="UTF-8"?>

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!-- Temporarily, this ex-Taste build file is separate.
  Next step is to integrate it. -->

<project basedir="." default="build" name="mahout-taste">

  <property file="taste-build.properties"/>
  <property environment="env"/>
  <property name="name" value="${ant.project.name}"/>
  <property name="release-jar" value="${name}.jar"/>
  <property name="release-ejb-jar" value="${name}-ejb.jar"/>
  <property name="release-war" value="${name}.war"/>
  <property name="release-zip" value="${name}-${version}.zip"/>

  <target name="init">
    <tstamp/>
    <available file="${proguard.jar}" property="proguard.jar.present"/>
    <available file="${mysql.jar}" property="mysql.jar.present"/>
    <available type="dir" file="${axis.jars}" property="axis.jars.present"/>
  </target>

  <target depends="init" name="build-except-jdbc" description="Compiles all but JDBC-related code">
    <mkdir dir="build"/>
    <javac source="1.5"
           target="1.5"
           deprecation="true"
           destdir="build"
           debug="true"
           optimize="true"
           srcdir="src/main/java">
      <compilerarg value="-Xlint:all,-serial,-unchecked"/>
      <classpath>
        <pathelement location="${ejb.jar}"/>
        <pathelement location="${servlet.jar}"/>
      </classpath>
      <include name="org/apache/mahout/cf/taste/**"/>
      <exclude name="org/apache/mahout/cf/taste/impl/model/jdbc/**"/>
      <exclude name="org/apache/mahout/cf/taste/impl/recommender/slopeone/jdbc/**"/>
    </javac>
  </target>

  <target depends="init,build-except-jdbc" name="build-jdbc" description="Compiles JDBC-related code" if="mysql.jar.present">
    <javac source="1.5"
           target="1.5"
           deprecation="true"
           destdir="build"
           debug="true"
           optimize="true"
           srcdir="src/main/java">
      <compilerarg value="-Xlint:all,-serial,-unchecked"/>
      <classpath>
        <pathelement location="${dbcp.jar}"/>
        <pathelement location="${pool.jar}"/>
        <pathelement location="${mysql.jar}"/>
        <pathelement location="build"/>
      </classpath>
      <include name="org/apache/mahout/cf/taste/impl/model/jdbc/**"/>
      <include name="org/apache/mahout/cf/taste/impl/recommender/slopeone/jdbc/**"/>
    </javac>
  </target>

  <target depends="init,build-except-jdbc,build-jdbc" name="build" description="Compiles all code">
    <jar jarfile="${release-jar}">
      <fileset dir="build">
        <include name="org/apache/mahout/cf/taste/**"/>        
        <exclude name="org/apache/mahout/cf/taste/web/**"/>
        <exclude name="org/apache/mahout/cf/taste/ejb/**"/>
        <exclude name="org/apache/mahout/cf/taste/example/**"/>
      </fileset>
    </jar>
  </target>

  <target depends="build" name="optimize" description="Optimizes code" if="proguard.jar.present">
    <property name="rt.jar" value="${env.JDK_HOME}/jre/lib/rt.jar"/>
    <fail message="Can't find JDK classes at ${rt.jar}; is JDK_HOME set?">
      <condition>
        <not>
          <available type="file" file="${rt.jar}"/>
        </not>
      </condition>
    </fail>
    <move file="${release-jar}" tofile="temp.jar"/>
    <java jar="${proguard.jar}" fork="true" failonerror="true">
      <arg value="-injars temp.jar"/>
      <arg value="-outjars ${release-jar}"/>
      <arg value="-libraryjars ${env.JDK_HOME}/jre/lib/rt.jar"/>
      <arg value="-libraryjars ${pool.jar}"/>
      <arg value="-ignorewarnings"/>
      <arg value="-dontshrink"/>
      <arg value="-dontobfuscate"/>
      <arg value="-optimizationpasses 6"/>
      <arg value="-keep public class * { public protected *; }"/>
      <arg value="-target 5"/>
      <arg value="-verbose"/>
    </java>
    <delete file="temp.jar"/>
  </target>

  <target depends="build,optimize" name="build-ejb" description="Builds deployable EJB component">
    <fail unless="my-recommender.jar" message="Please set -Dmy-recommender.jar=XXX"/>
    <fail unless="my-recommender-class" message="Please set -Dmy-recommender-class=XXX"/>
    <property name="my-ejb-jar.xml" value="${java.io.tmpdir}/ejb-jar.xml"/>
    <copy file="src/main/java/org/apache/mahout/cf/taste/ejb/ejb-jar.xml" tofile="${my-ejb-jar.xml}">
      <filterset>
        <filter token="RECOMMENDER_CLASS" value="${my-recommender-class}"/>
      </filterset>
    </copy>
    <jar jarfile="${release-ejb-jar}">
      <fileset dir="build">
        <include name="org/apache/mahout/cf/taste/ejb/**"/>
      </fileset>
      <zipfileset src="${release-jar}"/>
      <metainf file="${my-ejb-jar.xml}"/>
    </jar>
    <delete file="${my-ejb-jar.xml}"/>
  </target>

  <target depends="build" name="build-test" description="Builds test classes">
    <mkdir dir="build-test"/>
    <javac source="1.5"
           target="1.5"
           debug="true"
           debuglevel="lines,vars,source"
           deprecation="true"
           destdir="build-test"
           srcdir="src/test/java">
      <compilerarg value="-Xlint:all,-serial"/>
      <classpath>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${mysql.jar}"/>
        <pathelement location="${release-jar}"/>
      </classpath>
      <include name="org/apache/mahout/cf/taste/**"/>
    </javac>
  </target>

  <target depends="build,optimize" name="build-server" description="Builds deployable web-based Taste server">
    <fail unless="my-recommender.jar" message="Please set -Dmy-recommender.jar=XXX"/>
    <fail unless="my-recommender-class" message="Please set -Dmy-recommender-class=XXX"/>
    <fail unless="axis.jars.present" message="Please copy all Axis Java 1.4 .jar files from its lib directory into ${axis.jars}"/>
    <tempfile property="my-web.xml"/>
    <copy file="src/main/java/org/apache/mahout/cf/taste/web/web.xml" tofile="${my-web.xml}">
      <filterset>
        <filter token="RECOMMENDER_CLASS" value="${my-recommender-class}"/>
      </filterset>
    </copy>
    <war destfile="${release-war}" webxml="${my-web.xml}">
      <lib dir=".">
        <include name="${release-jar}"/>
        <include name="${my-recommender.jar}"/>
      </lib>
      <lib dir="${axis.jars}"/>
      <classes dir="build">
        <include name="org/apache/mahout/cf/taste/web/**"/>
      </classes>
      <fileset dir="src/main/java/org/apache/mahout/cf/taste/web">
        <include name="RecommenderService.jws"/>
      </fileset>
    </war>
    <delete file="${my-web.xml}"/>
  </target>

  <target depends="init,build" name="build-grouplens-example" description="Builds deployable GroupLens example">
    <property name="grouplens-location" value="src/main/examples/org/apache/mahout/cf/taste/example/grouplens"/>
    <fail message="Please download and install the GroupLens .dat files to ${grouplens-location}">
      <condition>
        <not>
          <and>
            <available type="file" file="${grouplens-location}/ratings.dat"/>
            <available type="file" file="${grouplens-location}/movies.dat"/>
          </and>
        </not>
      </condition>
    </fail>
    <javac source="1.5"
           target="1.5"
           deprecation="true"
           debug="true"
           optimize="true"
           destdir="build"
           srcdir="src/main/examples">
      <compilerarg value="-Xlint:all,-serial"/>
      <classpath>
        <pathelement location="${release-jar}"/>
      </classpath>
    </javac>
    <jar jarfile="grouplens.jar">
      <include name="${grouplens-location}/ratings.dat"/>
      <include name="${grouplens-location}/movies.dat"/>
      <fileset dir="build">
        <include name="org/apache/mahout/cf/taste/example/grouplens/**"/>
      </fileset>
    </jar>
    <property name="my-recommender.jar" value="grouplens.jar"/>
    <property name="my-recommender-class" value="org.apache.mahout.cf.taste.example.grouplens.GroupLensRecommender"/>
    <antcall target="build-server"/>
  </target>

  <target depends="build-grouplens-example" name="eval-grouplens-example"
          description="Evaluates current GroupLens example Recommender">
    <java classname="org.apache.mahout.cf.taste.example.grouplens.GroupLensRecommenderEvaluatorRunner" fork="true">
      <assertions>
        <disable/>
      </assertions>
      <jvmarg line="-server"/>
      <jvmarg line="-Xmx1024m"/>
      <classpath>
        <pathelement location="${release-jar}"/>
        <pathelement location="grouplens.jar"/>
      </classpath>
    </java>
  </target>

  <target depends="build,optimize,build-test" name="test-quick" description="Runs quick unit tests">
    <junit printsummary="on" haltonfailure="on" haltonerror="on" fork="on">
      <formatter type="plain" usefile="false"/>
      <classpath>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${release-jar}"/>
        <pathelement location="build-test"/>
      </classpath>
      <assertions>
        <enable/>
      </assertions>
      <batchtest>
        <fileset dir="src/test/java">
          <include name="org/apache/mahout/cf/taste/**/*Test.java"/>
          <exclude name="org/apache/mahout/cf/taste/impl/model/jdbc/*.java"/>
          <exclude name="org/apache/mahout/cf/taste/impl/LoadTest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target depends="test-quick,test-jdbc,test-load" name="test" description="Runs all unit tests"/>

  <target depends="build,optimize,build-test" name="test-jdbc" unless="notestjdbc" description="Runs JDBC unit tests">
    <junit printsummary="on" haltonfailure="on" haltonerror="on" fork="on">
      <formatter type="plain" usefile="false"/>
      <classpath>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${mysql.jar}"/>
        <pathelement location="${release-jar}"/>
        <pathelement location="build-test"/>
      </classpath>
      <assertions>
        <enable/>
      </assertions>
      <batchtest>
        <fileset dir="src/test/java">
          <include name="org/apache/mahout/cf/taste/impl/model/jdbc/*Test.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target depends="build,optimize,build-test" name="test-load" unless="notestload" description="Runs load tests">
    <junit printsummary="on" haltonfailure="on" haltonerror="on" fork="on">
      <formatter type="plain" usefile="false"/>
      <classpath>
        <pathelement location="${junit.jar}"/>
        <pathelement location="${release-jar}"/>
        <pathelement location="build-test"/>
      </classpath>
      <assertions>
        <disable/>
      </assertions>
      <jvmarg value="-server"/>
      <jvmarg value="-Xmx512m"/>
      <batchtest>
        <fileset dir="src/test/java">
          <include name="org/apache/mahout/cf/taste/impl/LoadTest.java"/>
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target depends="init" name="javadoc" description="Builds javadoc documentation">
    <mkdir dir="docs/javadoc"/>
    <javadoc destdir="docs/javadoc">
      <fileset dir="src/main/java">
        <include name="**/*.java"/>
      </fileset>
      <classpath>
        <pathelement location="${ejb.jar}"/>
        <pathelement location="${servlet.jar}"/>
        <pathelement location="${dbcp.jar}"/>
        <pathelement location="${pool.jar}"/>
        <pathelement location="${mysql.jar}"/>
      </classpath>
    </javadoc>
  </target>

  <target depends="clean,test,build-grouplens-example,javadoc" name="release"
          description="Builds a release package">
    <zip destfile="${release-zip}" basedir=".">
      <include name="${release-jar}"/>
      <include name="src/main/java/org/apache/mahout/cf/taste/**"/>
      <include name="src/main/examples/org/apache/mahout/cf/taste/**"/>
      <include name="src/test/java/org/apache/mahout/cf/taste/**"/>
      <!-- Make sure GroupLens data is not redistributed -->
      <exclude name="src/**/*.dat"/>
      <include name="docs/**"/>
      <include name="lib/**"/>
      <exclude name="lib/mysql*"/>
      <exclude name="lib/proguard*"/>
      <include name="build.xml"/>
      <include name="build.properties"/>
      <include name="CHANGES"/>
      <include name="LICENSE"/>
    </zip>
  </target>

  <target depends="init" name="clean" description="Deletes build products">
    <delete dir="build"/>
    <delete dir="build-test"/>
    <delete dir="docs/javadoc"/>
    <delete dir="target"/>
    <delete file="${release-jar}"/>
    <delete file="${release-zip}"/>
    <delete file="${release-war}"/>
    <delete>
      <fileset dir=".">
        <include name="mahout*.jar"/>
      </fileset>
    </delete>
  </target>

</project>
